{"version":3,"sources":["store/chat.js","store/index.js","components/ChannelContainer.jsx","components/ChannelListContainer.jsx","assets/AddChannel.js","assets/ChannelInfo.js","assets/CloseCreateChannel.js","assets/InviteIcon.js","assets/SearchIcon.js","components/ChannelSearch.jsx","components/TeamChannelList.jsx","components/TeamChannelPreview.jsx","components/ChannelInner.jsx","components/CreateChannel.jsx","components/EditChannel.jsx","assets/signup.jpg","components/Auth.jsx","components/UserList.jsx","components/ResultsDropdown.jsx","components/Side.js","App.jsx","index.js"],"names":["chatSlice","createSlice","name","initialState","createType","isCreating","isEditing","toggleContainer","reducers","setCreateType","state","action","payload","setIsCreating","setIsEditing","setToggleContainer","chatActions","actions","store","configureStore","reducer","chat","chatReducer","ChannelContainer","isCreate","useSelector","className","Channel","EmptyStateIndicator","Message","messageProps","i","MessageTeam","cookies","Cookies","SideBar","logout","onClick","style","fontSize","CompanyHeader","customChannelTeamFilter","channels","filter","channel","type","customChannelMessagingFilter","ChannelListContent","filters","members","$in","useChatContext","client","userID","width","display","color","remove","window","location","reload","ChannelList","channelRenderFilterFn","List","listProps","Preview","previewProps","ChannelListContainer","dispatch","useDispatch","left","backgroundColor","AddChannel","height","viewBox","fill","xmlns","d","fillOpacity","ChannelInfo","CloseCreateChannel","InviteIcon","marginLeft","SearchIcon","fillRule","clipRule","ChannelSearch","setActiveChannel","useState","query","setQuery","loading","setLoading","teamChannels","setTeamChannels","directChannels","setDirectChannels","useEffect","getChannels","text","a","channelResponse","queryChannels","$autocomplete","userResponse","queryUsers","id","$ne","Promise","all","users","length","placeholder","value","onChange","event","preventDefault","target","setChannel","TeamChannelList","children","error","TeamChannelPreview","activeChannel","ChannelPreview","data","DirectPreview","Object","values","user","Avatar","image","fullName","size","GiphyContext","React","createContext","TeamChannelHeader","watchers","useChannelStateContext","watcher_count","MessagingHeader","additionalMembers","map","ChannelInner","giphyState","setGiphyState","sendMessage","useChannelActionContext","Provider","Window","MessageList","MessageInput","overrideSubmitHandler","message","updatedMessage","attachments","mentioned_users","parent_id","parent","Thread","ChannelNameInput","channelName","setChannelName","CreateChannel","selectedUsers","setSelectedUsers","createChannel","e","newChannel","watch","console","log","EditChannel","updateChannel","update","addMembers","username","password","confirmPassword","phoneNumber","avatarURL","Auth","form","setForm","isSignup","setIsSignup","handleChange","handleSubmit","axios","post","token","userId","hashedPassword","set","onSubmit","htmlFor","required","prevIsSignup","src","signinImage","alt","ListContainer","UserItem","selected","setSelected","prevUsers","prevUser","prevSelected","UserList","setUsers","listEmpty","setListEmpty","setError","getUsers","limit","response","index","channelByUser","member_count","$eq","existingChannel","SearchResult","focusedId","undefined","ResultsDropdown","Side","setState","toggleDrawer","anchor","open","key","list","sx","role","Fragment","Tooltip","title","IconButton","Drawer","onClose","authToken","get","StreamChat","getInstance","connectUser","App","Chat","theme","ReactDOM","render","document","getElementById"],"mappings":"2MAQMA,EAAYC,YAAY,CAC5BC,KAAM,OACNC,aATuB,CACvBC,WAAY,GACZC,YAAY,EACZC,WAAW,EACXC,iBAAiB,GAMjBC,SAAU,CACRC,cADQ,SACMC,EAAOC,GACnBD,EAAMN,WAAaO,EAAOC,SAE5BC,cAJQ,SAIMH,EAAOC,GACnBD,EAAML,WAAaM,EAAOC,SAE5BE,aAPQ,SAOKJ,EAAOC,GAClBD,EAAMJ,UAAYK,EAAOC,SAE3BG,mBAVQ,SAUWL,EAAOC,GACxBD,EAAMH,iBAAmBI,EAAOC,YAMzBI,EAAchB,EAAUiB,QACtBjB,IAAf,QClBekB,EANDC,YAAe,CAC3BC,QAAS,CAAEC,KAAMC,K,0DC4CJC,EA5CU,WACvB,IAAMC,EAAWC,aAAY,SAACf,GAAD,OAAWA,EAAMW,KAAKhB,cAC7CC,EAAYmB,aAAY,SAACf,GAAD,OAAWA,EAAMW,KAAKf,aAEpD,GAAIkB,EACF,OACE,qBAAKE,UAAU,qBAAf,SACE,cAAC,GAAD,MAKN,GAAIpB,EACF,OACE,qBAAKoB,UAAU,qBAAf,SACE,cAAC,GAAD,MAiBN,OACE,qBAAKA,UAAU,sBAAf,SACE,cAACC,EAAA,EAAD,CACEC,oBAda,kBACjB,sBAAKF,UAAU,2BAAf,UACE,mBAAGA,UAAU,uBAAb,yDAGA,mBAAGA,UAAU,wBAAb,sEAUEG,QAAS,SAACC,EAAcC,GAAf,OAAqB,cAACC,EAAA,EAAD,eAAyBF,GAAPC,IAFlD,SAIE,cAAC,EAAD,S,0BClCFE,EAAU,IAAIC,IAGdC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACR,qBAAKV,UAAU,+BAAf,SACI,qBAAKA,UAAU,eAAeW,QAASD,EAAvC,SACA,cAAC,IAAD,CAAUE,MAAO,CAACC,SAAS,iBAKjCC,EAAgB,kBAElB,aADF,CACE,MAAId,UAAU,6BAAd,yBAKEe,EAA0B,SAACC,GAC7B,OAAOA,EAASC,QAAO,SAACC,GAAD,MAA8B,SAAjBA,EAAQC,SAI1CC,EAA+B,SAACJ,GAClC,OAAOA,EAASC,QAAO,SAACC,GAAD,MAA8B,cAAjBA,EAAQC,SAKnCE,EAAqB,WAC9B,IAeMC,EAAU,CAAEC,QAAS,CAAEC,IAAK,CAffC,cAAXC,OAekCC,UAE1C,OACE,mCACE,sBAAK3B,UAAU,8BAAf,UACE,sBAAMY,MAAO,CAACgB,MAAM,OAAQC,QAAQ,QAApC,UACA,cAAC,EAAD,CAASjB,MAAO,CAACiB,QAAQ,OAAQC,MAAM,SAAUpB,OAlBxC,WACXH,EAAQwB,OAAO,SACfxB,EAAQwB,OAAO,UACfxB,EAAQwB,OAAO,YACfxB,EAAQwB,OAAO,YACfxB,EAAQwB,OAAO,aACfxB,EAAQwB,OAAO,kBACfxB,EAAQwB,OAAO,eAEfC,OAAOC,SAASC,YAUd,cAAC,EAAD,OAEA,cAAC,EAAD,IAEA,cAACC,EAAA,EAAD,CACEb,QAASA,EACTc,sBAAuBrB,EACvBsB,KAAM,SAACC,GAAD,OAEJ,aADA,CACC,EAAD,2BACMA,GADN,IAEEnB,KAAK,WAGToB,QAAS,SAACC,GAAD,OACP,cAAC,EAAD,2BACMA,GADN,IAEErB,KAAK,aAIX,cAACgB,EAAA,EAAD,CACEb,QAASA,EACTc,sBAAuBhB,EACvBiB,KAAM,SAACC,GAAD,OACJ,cAAC,EAAD,2BACMA,GADN,IAEEnB,KAAK,gBAGToB,QAAS,SAACC,GAAD,OACP,cAAC,EAAD,2BACMA,GADN,IAEErB,KAAK,wBAwCNsB,EA9Bc,WACzB,IAAM5D,EAAkBkB,aAAY,SAACf,GAAD,OAAWA,EAAMW,KAAKd,mBACpD6D,EAAWC,cAEjB,OACE,qCACE,qBAAK3C,UAAU,0BAAf,SACE,cAAC,EAAD,MAGF,sBACEA,UAAU,qCACVY,MAAO,CACLgC,KAAM/D,EAAkB,KAAO,OAC/BgE,gBAAiB,WAJrB,UAOE,qBACE7C,UAAU,iCACVW,QAAS,kBACP+B,EAASpD,EAAYD,mBAAmBR,OAG5C,cAAC,EAAD,W,iCC3HGiE,EAAa,SAAC,GAAc,IAAZ3B,EAAW,EAAXA,KACtBuB,EAAWC,cACXhE,EAAaoB,aAAY,SAACf,GAAD,OAAWA,EAAMW,KAAKhB,cAC/CE,EAAkBkB,aAAY,SAACf,GAAD,OAAWA,EAAMW,KAAKd,mBAEzD,OACA,qBACE+C,MAAM,KACNmB,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BACNvC,QAAS,WACP+B,EAASpD,EAAYP,cAAcoC,IACnCuB,EAASpD,EAAYH,eAAeR,IACpC+D,EAASpD,EAAYF,cAAa,IAC9BP,GACF6D,EAASpD,EAAYD,mBAAmBR,KAX9C,SAcE,sBACEsE,EAAE,gKACFF,KAAK,QACLG,YAAY,YC1BLC,EAAc,kBACzB,qBAAKzB,MAAM,KAAKmB,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAAlE,SACE,sBACEC,EAAE,mgBACFF,KAAK,QACLG,YAAY,YCHLE,EAAqB,SAAC,GAAuB,IAArBnE,EAAoB,EAApBA,cAC9BuD,EAAWC,cAEhB,OACA,qBACEf,MAAM,KACNmB,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BACNvC,QAAS,WACHxB,GAAeuD,EAASpD,EAAYH,eAAc,IAClDG,EAAYF,gBAAgBsD,EAASpD,EAAYF,cAAa,KARtE,SAWE,sBACE+D,EAAE,6ZACFF,KAAK,4BCnBEM,EAAa,kBACxB,qBAAK3C,MAAO,CAAE4C,WAAY,OAA1B,SACE,qBAAK5B,MAAM,KAAKmB,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAAlE,SACE,sBACEC,EAAE,gzBACFF,KAAK,iBCLAQ,EAAa,kBACxB,qBAAKP,MAAM,6BAA6BtB,MAAM,KAAKmB,OAAO,KAAKE,KAAK,OAAOD,QAAQ,YAAnF,SACE,sBACEC,KAAK,OACLG,YAAY,OACZM,SAAS,UACTP,EAAE,4KACFQ,SAAS,eC0EAC,EA7EO,WAClB,MAAqCnC,cAA7BC,EAAR,EAAQA,OAAQmC,EAAhB,EAAgBA,iBAChB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAA4CN,mBAAS,IAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KAEAC,qBAAU,WACFR,IACAK,EAAgB,IAChBE,EAAkB,OAEvB,CAACP,IAGJ,IAAMS,EAAW,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,sEAENC,EAAkBjD,EAAOkD,cAAc,CACzCzD,KAAM,OACN3C,KAAM,CAAEqG,cAAeJ,GACvBlD,QAAS,CAAEC,IAAK,CAACE,EAAOC,WAEtBmD,EAAepD,EAAOqD,WAAW,CACnCC,GAAI,CAAEC,IAAKvD,EAAOC,QAClBnD,KAAM,CAAEqG,cAAeJ,KATf,SAYwBS,QAAQC,IAAI,CAACR,EAAiBG,IAZtD,mCAYL9D,EAZK,KAYOoE,EAZP,KAYOA,MAEhBpE,EAASqE,QAAQjB,EAAgBpD,GACjCoE,EAAMC,QAAQf,EAAkBc,GAfvB,kDAiBZpB,EAAS,IAjBG,0DAAH,sDAmCjB,OACI,sBAAKhE,UAAU,4BAAf,UACI,sBAAKA,UAAU,iCAAf,UACI,qBAAKA,UAAU,8BAAf,SACI,cAAC,EAAD,MAEJ,uBACIA,UAAU,8BACVsF,YAAY,SACZnE,KAAK,OACLoE,MAAOxB,EACPyB,SAxBC,SAACC,GACdA,EAAMC,iBAENxB,GAAW,GACXF,EAASyB,EAAME,OAAOJ,OACtBf,EAAYiB,EAAME,OAAOJ,aAsBnBxB,GACE,cAAC,GAAD,CACII,aAAcA,EACdE,eAAgBA,EAChBJ,QAASA,EACT2B,WAxBG,SAAC1E,GAChB8C,EAAS,IACTH,EAAiB3C,IAuBL8C,SAAUA,QC/Bf6B,EAzCS,SAAC,GACd,IADgBC,EACjB,EADiBA,SACjB,IAD2BC,aAC3B,SAD0C9B,EAC1C,EAD0CA,QAAS9C,EACnD,EADmDA,KAGzD,OAAG4E,EAEe,SAAT5E,EACL,qBAAKnB,UAAU,oBAAf,SACE,mBAAGA,UAAU,6BAAb,qEAIA,KAIHiE,EAEK,qBAAKjE,UAAU,oBAAf,SACI,oBAAGA,UAAU,qCAAb,UACc,SAATmB,EAAkB,WAAa,WADpC,mBAQR,sBAAKnB,UAAU,oBAAf,UACI,sBAAKA,UAAU,4BAAf,UACI,mBAAGA,UAAU,mCAAb,SACc,SAATmB,EAAkB,WAAa,oBAGpC,cAAC,EAAD,CACIA,KAAe,SAATA,EAAkB,OAAS,iBAGxC2E,M,QCgBEE,EAnDY,SAAC,GACH,IADKnC,EACN,EADMA,iBAC1B3C,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACT,EAA2CM,cAA1BwE,EAAjB,EAAQ/E,QAAwBQ,EAAhC,EAAgCA,OAC1BgB,EAAWC,cACX9D,EAAkBkB,aAAY,SAACf,GAAD,OAAWA,EAAMW,KAAKd,mBAGpDqH,EAAiB,0BACnB,oBAAGlG,UAAU,wBAAb,gBACc,OAAPkB,QAAO,IAAPA,GAAA,UAAAA,EAASiF,YAAT,eAAe3H,QAAf,OAAuB0C,QAAvB,IAAuBA,GAAvB,UAAuBA,EAASiF,YAAhC,aAAuB,EAAenB,QAM3CoB,EAAgB,WAAO,IAAD,oBAElB7E,EAAU8E,OAAOC,OAAOpF,EAAQlC,MAAMuC,SAASN,QAAO,qBAAGsF,KAAgBvB,KAAOtD,EAAOC,UAE7F,OACI,sBAAK3B,UAAU,+BAAf,UACI,cAACwG,EAAA,EAAD,CACIC,MAAK,UAAElF,EAAQ,UAAV,iBAAE,EAAYgF,YAAd,aAAE,EAAkBE,MACzBjI,MAAM,UAAA+C,EAAQ,UAAR,mBAAYgF,YAAZ,eAAkBG,YAAlB,UAA8BnF,EAAQ,UAAtC,iBAA8B,EAAYgF,YAA1C,aAA8B,EAAkBvB,IACtD2B,KAAM,KAEV,6BAAI,UAAApF,EAAQ,UAAR,mBAAYgF,YAAZ,eAAkBG,YAAlB,UAA8BnF,EAAQ,UAAtC,iBAA8B,EAAYgF,YAA1C,aAA8B,EAAkBvB,UAKhE,OACI,qBAAKhF,WACM,OAAPkB,QAAO,IAAPA,OAAA,EAAAA,EAAS8D,OAAT,OAAgBiB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAejB,IACzB,qCACA,2BAEVrE,QAAS,WACL+B,EAASpD,EAAYH,eAAc,IACnCuD,EAASpD,EAAYF,cAAa,IAClCyE,EAAiB3C,GACbrC,GACF6D,EAASpD,EAAYD,mBAAmBR,KAV9C,SAcc,SAATsC,EAAkB,cAAC+E,EAAD,IAAqB,cAACE,EAAD,O,6DC5CvCQ,EAAeC,IAAMC,cAAc,IAyC1CC,EAAoB,SAAC,GACnB,eACJ,IAqCwBC,EArCxB,EAAmCC,cAA3B/F,EAAR,EAAQA,QAASgG,EAAjB,EAAiBA,cACTxF,EAAWD,cAAXC,OAEFyF,EAAkB,WACtB,IAAM5F,EAAU8E,OAAOC,OAAOpF,EAAQlC,MAAMuC,SAASN,QAAO,qBAAGsF,KAAgBvB,KAAOtD,EAAOC,UACvFyF,EAAoB7F,EAAQ8D,OAAS,EACrC3C,EAAWC,cAGjB,MAAoB,cAAjBzB,EAAQC,KAEP,sBAAKnB,UAAU,oCAAf,UACGuB,EAAQ8F,KAAI,WAAWhH,GAAX,IAAGkG,EAAH,EAAGA,KAAH,OACX,sBAAavG,UAAU,kCAAvB,UACE,cAACwG,EAAA,EAAD,CAAQC,MAAOF,EAAKE,MAAOjI,KAAM+H,EAAKG,UAAYH,EAAKvB,GAAI2B,KAAM,KACjE,mBAAG3G,UAAU,iCAAb,SAA+CuG,EAAKG,UAAYH,EAAKvB,OAF7D3E,MAMX+G,EAAoB,GAAK,oBAAGpH,UAAU,iCAAb,iBAAmDoH,EAAnD,cAM9B,sBAAKpH,UAAU,uCAAf,UACE,oBAAGA,UAAU,4BAAb,eAA4CkB,EAAQiF,KAAK3H,QACzD,sBACEoC,MAAO,CAAEiB,QAAS,QAClBlB,QAAS,kBAAM+B,EAASpD,EAAYF,cAAa,KAFnD,SAIE,cAAC,EAAD,UAYR,OACE,sBAAKY,UAAU,iCAAf,UACE,cAACmH,EAAD,IACA,qBAAKnH,UAAU,6BAAf,SACE,mBAAGA,UAAU,kCAAb,UAVkBgH,EAU6CE,EAT9DF,EACY,IAAbA,EAAuB,gBACrB,GAAN,OAAUA,EAAV,iBAFsB,2BAeXM,EA9FI,SAAC,GACd,eACN,MAAoCxD,oBAAS,GAA7C,mBAAOyD,EAAP,KAAmBC,EAAnB,KACQC,EAAgBC,cAAhBD,YAqBR,OACE,cAACb,EAAae,SAAd,CAAuBpC,MAAO,CAAEgC,aAAYC,iBAA5C,SACE,sBAAK5G,MAAO,CAAEiB,QAAS,OAAQD,MAAO,QAAtC,UACE,eAACgG,EAAA,EAAD,WACE,cAAC,EAAD,IAEA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAcC,sBA1BQ,SAACC,GAAa,IAAD,EACrCC,EAAiB,CACnBC,YAAaF,EAAQE,YACrBC,gBAAiBH,EAAQG,gBACzBC,UAAS,UAAEJ,EAAQK,cAAV,aAAE,EAAgBrD,GAC3BqD,OAAQL,EAAQK,OAChB5D,KAAMuD,EAAQvD,MAGZ8C,IACFU,EAAc,2BAAQA,GAAR,IAAwBxD,KAAK,UAAD,OAAYuD,EAAQvD,SAG5DgD,IACFA,EAAYQ,GACZT,GAAc,UAaZ,cAACc,EAAA,EAAD,UCjCFC,GAAmB,SAAC,GAA0C,IAAD,IAAvCC,mBAAuC,MAAzB,GAAyB,EAArBC,EAAqB,EAArBA,eAO1C,OACI,sBAAKzI,UAAU,8BAAf,UACI,qCACA,uBAAOuF,MAAOiD,EAAahD,SATd,SAACC,GAClBA,EAAMC,iBAEN+C,EAAehD,EAAME,OAAOJ,QAM2BD,YAAY,iBAC/D,gDAiDGoD,GA3CO,WAClB,IAAMhK,EAAaqB,aAAY,SAACf,GAAD,OAAWA,EAAMW,KAAKjB,cACrD,EAAqC+C,cAA7BC,EAAR,EAAQA,OAAQmC,EAAhB,EAAgBA,iBAChB,EAA0CC,mBAAS,CAACpC,EAAOC,QAAU,KAArE,mBAAOgH,EAAP,KAAsBC,EAAtB,KACA,EAAsC9E,mBAAS,IAA/C,mBAAO0E,EAAP,KAAoBC,EAApB,KACM/F,EAAWC,cAEXkG,EAAa,uCAAG,WAAOC,GAAP,eAAApE,EAAA,6DAClBoE,EAAEpD,iBADgB,kBAKWhE,EAAOR,QAAQxC,EAAY8J,EAAa,CAC7DhK,KAAMgK,EAAajH,QAASoH,IANlB,cAKRI,EALQ,gBAURA,EAAWC,QAVH,OAYdP,EAAe,IACf/F,EAASpD,EAAYH,eAAc,IACnCyJ,EAAiB,CAAClH,EAAOC,SACzBkC,EAAiBkF,GAfH,kDAiBdE,QAAQC,IAAR,MAjBc,0DAAH,sDAqBnB,OACI,sBAAKlJ,UAAU,4BAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,4BAAmB,SAAftB,EAAwB,uBAAyB,0BACrD,cAAC,EAAD,OAEY,SAAfA,GAAyB,cAAC,GAAD,CAAkB8J,YAAaA,EAAaC,eAAgBA,IACtF,cAAC,GAAD,CAAUG,iBAAkBA,IAC5B,qBAAK5I,UAAU,iCAAiCW,QAASkI,EAAzD,SACI,4BAAmB,SAAfnK,EAAwB,iBAAmB,+BCvDzD6J,GAAmB,SAAC,GAA0C,IAAD,IAAvCC,mBAAuC,MAAzB,GAAyB,EAArBC,EAAqB,EAArBA,eAO1C,OACI,sBAAKzI,UAAU,8BAAf,UACI,qCACA,uBAAOuF,MAAOiD,EAAahD,SATd,SAACC,GAClBA,EAAMC,iBAEN+C,EAAehD,EAAME,OAAOJ,QAM2BD,YAAY,iBAC/D,gDA8CG6D,GAzCK,SAAC,GACb,IAAD,iBACH,IAAQjI,EAAYO,cAAZP,QACR,EAAsC4C,mBAAQ,OAAC5C,QAAD,IAACA,GAAD,UAACA,EAASiF,YAAV,aAAC,EAAe3H,MAA9D,mBAAOgK,EAAP,KAAoBC,EAApB,KACA,EAA0C3E,mBAAS,IAAnD,mBAAO6E,EAAP,KAAsBC,EAAtB,KACMlG,EAAWC,cAEXyG,EAAa,uCAAG,WAAO3D,GAAP,SAAAf,EAAA,yDAClBe,EAAMC,mBAEc8C,KAAiBtH,EAAQiF,KAAK3H,MAAQ0C,EAAQiF,KAAKnB,KAHrD,gCAMR9D,EAAQmI,OAAO,CAAE7K,KAAMgK,GAAe,CAAE/D,KAAK,2BAAD,OAA6B+D,KANjE,WASfG,EAActD,OATC,gCAURnE,EAAQoI,WAAWX,GAVX,OAalBF,EAAe,MACf/F,EAASpD,EAAYF,cAAa,IAClCwJ,EAAiB,IAfC,4CAAH,sDAkBnB,OACI,sBAAK5I,UAAU,0BAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,6CACA,cAAC,EAAD,OAGJ,cAAC,GAAD,CAAkBwI,YAAaA,EAAaC,eAAgBA,IAC5D,cAAC,GAAD,CAAUG,iBAAkBA,IAC5B,qBAAK5I,UAAU,+BAA+BW,QAASyI,EAAvD,SACI,mD,sCC3DD,OAA0B,mCCMnC7I,GAAU,IAAIC,IAEd/B,GAAe,CACjBiI,SAAU,GACV6C,SAAU,GACVC,SAAU,GACVC,gBAAiB,GACjBC,YAAa,GACbC,UAAW,IAsJAC,GAnJF,WACT,MAAwB9F,mBAASrF,IAAjC,mBAAOoL,EAAP,KAAaC,EAAb,KACA,EAAgChG,oBAAS,GAAzC,mBAAOiG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAACnB,GAClBgB,EAAQ,2BAAKD,GAAN,mBAAaf,EAAEnD,OAAOnH,KAAOsK,EAAEnD,OAAOJ,UAI3C2E,EAAY,uCAAG,WAAOpB,GAAP,iCAAApE,EAAA,6DACnBoE,EAAEpD,iBAGM6D,EAA+CM,EAA/CN,SAAUC,EAAqCK,EAArCL,SAAUE,EAA2BG,EAA3BH,YAAaC,EAAcE,EAAdF,UAG7B,2CAPO,SAYTQ,KAAMC,KAAN,UALE,2CAKF,YAAqBL,EAAW,SAAW,SAAW,CAC9DR,WACAC,WACA9C,SAAUmD,EAAKnD,SACfgD,cACAC,cAjBiB,oBAWjBxD,KAAQkE,EAXS,EAWTA,MAAOC,EAXE,EAWFA,OAAQC,EAXN,EAWMA,eAAgB7D,EAXtB,EAWsBA,SAUzCnG,GAAQiK,IAAI,QAASH,GACrB9J,GAAQiK,IAAI,WAAYjB,GACxBhJ,GAAQiK,IAAI,WAAY9D,GACxBnG,GAAQiK,IAAI,SAAUF,GAElBP,IACFxJ,GAAQiK,IAAI,cAAed,GAC3BnJ,GAAQiK,IAAI,YAAab,GACzBpJ,GAAQiK,IAAI,iBAAkBD,IAIhCvI,OAAOC,SAASC,SAjCG,4CAAH,sDAwClB,OACI,sBAAKlC,UAAU,uBAAf,UACI,sBAAKA,UAAU,8BAAf,UACQ,oBAAIA,UAAU,cAAd,wBACJ,sBAAKA,UAAU,sCAAf,UACI,4BAAI+J,EAAW,UAAY,YAC3B,uBAAMU,SAAUP,EAAhB,UACKH,GACG,sBAAK/J,UAAU,4CAAf,UACI,uBAAO0K,QAAQ,WAAf,uBACA,uBACIlM,KAAK,WACL2C,KAAK,OACLmE,YAAY,YACZE,SAAUyE,EACVU,UAAQ,OAIpB,sBAAK3K,UAAU,4CAAf,UACI,uBAAO0K,QAAQ,WAAf,sBACI,uBACIlM,KAAK,WACL2C,KAAK,OACLmE,YAAY,WACZE,SAAUyE,EACVU,UAAQ,OAGnBZ,GACG,sBAAK/J,UAAU,4CAAf,UACI,uBAAO0K,QAAQ,cAAf,0BACA,uBACIlM,KAAK,cACL2C,KAAK,OACLmE,YAAY,eACZE,SAAUyE,EACVU,UAAQ,OAInBZ,GACG,sBAAK/J,UAAU,4CAAf,UACI,uBAAO0K,QAAQ,YAAf,wBACA,uBACIlM,KAAK,YACL2C,KAAK,OACLmE,YAAY,aACZE,SAAUyE,OAItB,sBAAKjK,UAAU,4CAAf,UACQ,uBAAO0K,QAAQ,WAAf,sBACA,uBACIlM,KAAK,WACL2C,KAAK,WACLmE,YAAY,WACZE,SAAUyE,EACVU,UAAQ,OAGnBZ,GACG,sBAAK/J,UAAU,4CAAf,UACI,uBAAO0K,QAAQ,kBAAf,8BACA,uBACIlM,KAAK,kBACL2C,KAAK,WACLmE,YAAY,mBACZE,SAAUyE,EACVU,UAAQ,OAIpB,qBAAK3K,UAAU,6CAAf,SACI,iCAAS+J,EAAW,UAAY,iBAGxC,qBAAK/J,UAAU,sCAAf,SACI,8BACK+J,EACE,2BACA,yBAEF,sBAAMpJ,QAxFZ,WACfqJ,GAAY,SAACY,GAAD,OAAmBA,MAuFV,SACCb,EAAW,UAAY,uBAMzC,qBAAK/J,UAAU,6BAAf,SACI,qBAAK6K,IAAKC,GAAaC,IAAI,kB,SCxJrCC,GAAgB,SAAC,GAAkB,IAAhBlF,EAAe,EAAfA,SACrB,OACI,sBAAK9F,UAAU,uBAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,qCACA,0CAEH8F,MAKPmF,GAAW,SAAC,GAAgC,IAA9B1E,EAA6B,EAA7BA,KAAMqC,EAAuB,EAAvBA,iBACtB,EAAgC9E,oBAAS,GAAzC,mBAAOoH,EAAP,KAAiBC,EAAjB,KAcA,OACI,sBAAKnL,UAAU,qBAAqBW,QAZnB,WACjBsI,QAAQC,IAAI,SAERN,EADDsC,EACkB,SAACE,GAAD,OAAeA,EAAUnK,QAAO,SAACoK,GAAD,OAAcA,IAAa9E,EAAKvB,OAEhE,SAACoG,GAAD,6BAAmBA,GAAnB,CAA8B7E,EAAKvB,OAGxDmG,GAAY,SAACG,GAAD,OAAmBA,MAI/B,UACI,sBAAKtL,UAAU,0BAAf,UACI,cAACwG,EAAA,EAAD,CAAQC,MAAOF,EAAKE,MAAOjI,KAAM+H,EAAKG,UAAYH,EAAKvB,GAAI2B,KAAM,KACjE,mBAAG3G,UAAU,kBAAb,SAAgCuG,EAAKG,UAAYH,EAAKvB,QAEzDkG,EAAW,cAAC,EAAD,IAAiB,qBAAKlL,UAAU,gCA0EzCuL,GApEE,SAAC,GAA0B,IAAxB3C,EAAuB,EAAvBA,iBACRlH,EAAWD,cAAXC,OACR,EAA0BoC,mBAAS,IAAnC,mBAAOsB,EAAP,KAAcoG,EAAd,KACA,EAA8B1H,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAO2H,EAAP,KAAkBC,EAAlB,KACA,EAA0B5H,oBAAS,GAAnC,mBAAOiC,EAAP,KAAc4F,EAAd,KA8BA,OA5BApH,qBAAU,WACN,IAAMqH,EAAQ,uCAAG,4BAAAlH,EAAA,0DACVT,EADU,wDAGbC,GAAW,GAHE,kBAOcxC,EAAOqD,WAC1B,CAAEC,GAAI,CAAEC,IAAKvD,EAAOC,SACpB,CAAEqD,GAAI,GACN,CAAE6G,MAAO,IAVJ,QAOHC,EAPG,QAaG1G,MAAMC,OACdmG,EAASM,EAAS1G,OAElBsG,GAAa,GAhBR,kDAmBVC,GAAS,GAnBC,QAqBbzH,GAAW,GArBE,0DAAH,qDAwBXxC,GAAQkK,MACZ,IAEA7F,EAEK,cAAC,GAAD,UACI,qBAAK/F,UAAU,qBAAf,4DAOTyL,EAEK,cAAC,GAAD,UACI,qBAAKzL,UAAU,qBAAf,+BAQR,cAAC,GAAD,UACKiE,EAAU,qBAAKjE,UAAU,qBAAf,8BAAH,OAGJoF,QAHI,IAGJA,OAHI,EAGJA,EAAOiC,KAAI,SAACd,EAAMlG,GAAP,OACT,cAAC,GAAD,CAAU0L,MAAO1L,EAAiBkG,KAAMA,EAAMqC,iBAAkBA,GAAvCrC,EAAKvB,UCrG1CgH,GAAa,uCAAG,6CAAAtH,EAAA,6DAAShD,EAAT,EAASA,OAAQmC,EAAjB,EAAiBA,iBAAkB3C,EAAnC,EAAmCA,QAAS0E,EAA5C,EAA4CA,WAC1DtE,EAAU,CACdH,KAAM,YACN8K,aAAc,EACd1K,QAAS,CAAE2K,IAAK,CAACxK,EAAO6E,KAAKvB,GAAItD,EAAOC,UAJtB,SAOYD,EAAOkD,cAActD,GAPjC,wCAOb6K,EAPa,+CASQtI,EAAiBsI,IATzB,cAWdpD,EAAarH,EAAOR,QAAQ,YAAa,CAAEK,QAAS,CAACL,EAAQ8D,GAAItD,EAAOC,UAE9EiE,EAAWmD,GAbS,kBAeblF,EAAiBkF,IAfJ,4CAAH,sDAkBbqD,GAAe,SAAC,GAA8C,IAA5ClL,EAA2C,EAA3CA,QAASmL,EAAkC,EAAlCA,UAAWlL,EAAuB,EAAvBA,KAAMyE,EAAiB,EAAjBA,WAChD,EAAqCnE,cAA7BC,EAAR,EAAQA,OAAQmC,EAAhB,EAAgBA,iBACVnB,EAAWC,cACZ9D,EAAkBkB,aAAY,SAACf,GAAD,OAAWA,EAAMW,KAAKd,mBAEzD,MAAa,YAATsC,EAEA,sBACER,QAAS,WACPiF,EAAW1E,GACRrC,GACD6D,EAASpD,EAAYD,mBAAmBR,KAG5CmB,UAAWqM,IAAcnL,EAAQ8D,GAAK,4CAA8C,mCAPtF,UASE,qBAAKhF,UAAU,iBAAf,eACA,mBAAGA,UAAU,8BAAb,SAA4CkB,EAAQiF,KAAK3H,UAM7D,qBACEmC,QAAO,sBAAE,sBAAA+D,EAAA,sDACPsH,GAAc,CAAEtK,SAAQmC,mBAAkB3C,UAAS0E,eAChD/G,GACC6D,EAASpD,EAAYD,mBAAmBR,IAHrC,2CAMTmB,UAAWqM,IAAcnL,EAAQ8D,GAAK,4CAA8C,mCAPtF,SASE,sBAAKhF,UAAU,8BAAf,UACE,cAACwG,EAAA,EAAD,CAAQC,MAAOvF,EAAQuF,YAAS6F,EAAW9N,KAAM0C,EAAQ1C,KAAMmI,KAAM,KACrE,mBAAG3G,UAAU,8BAAb,SAA4CkB,EAAQ1C,aAwD7C+N,GAlDS,SAAC,GAAsE,IAApEpI,EAAmE,EAAnEA,aAAcE,EAAqD,EAArDA,eAAgBgI,EAAqC,EAArCA,UAAWpI,EAA0B,EAA1BA,QAAS2B,EAAiB,EAAjBA,WAE3E,OACE,sBAAK5F,UAAU,0BAAf,UACE,mBAAGA,UAAU,iCAAb,sBACCiE,IAAYE,EAAakB,QACxB,mBAAGrF,UAAU,iCAAb,SACE,6CAGFiE,GAAYE,EAAakB,OAA1B,OAKClB,QALD,IAKCA,OALD,EAKCA,EAAckD,KAAI,SAACnG,EAASb,GAAV,OAChB,cAAC,GAAD,CACEa,QAASA,EACTmL,UAAWA,EAEXzG,WAAYA,EACZzE,KAAK,WAFAd,MART,mBAAGL,UAAU,iCAAb,SACE,oDAaJ,mBAAGA,UAAU,iCAAb,mBACCiE,IAAYI,EAAegB,QAC1B,mBAAGrF,UAAU,iCAAb,SACE,6CAGFiE,GAAYI,EAAegB,OAA5B,OAKChB,QALD,IAKCA,OALD,EAKCA,EAAgBgD,KAAI,SAACnG,EAASb,GAAV,OAClB,cAAC,GAAD,CACEa,QAASA,EACTmL,UAAWA,EAEXzG,WAAYA,EACZzE,KAAK,QAFAd,MART,mBAAGL,UAAU,kCAAb,SACE,+D,+FCpFK,SAASwM,KACtB,MAA0B1I,mBAAS,CACjClB,MAAM,IADR,mBAAO5D,EAAP,KAAcyN,EAAd,KAIMC,EAAe,SAACC,EAAQC,GAAT,OAAkB,SAACnH,IACnB,YAAfA,EAAMtE,MAAqC,QAAdsE,EAAMoH,KAA+B,UAAdpH,EAAMoH,MAI9DJ,EAAS,2BAAKzN,GAAN,mBAAc2N,EAASC,OAG3BE,EAAO,SAACH,GAAD,OACX,qBACAI,GAAI,CAAEnL,MAAkB,QAAX+K,GAA+B,WAAXA,EAAsB,OAAS,KAChEK,KAAK,eACLhN,UAAU,iBACVY,MAAO,CAAEgB,MAAO,QAASiB,gBAAiB,UAAWE,OAAO,WAJ5D,SAME,cAAC,KAAD,UACA,cAAC,EAAD,SAIJ,OACE,gCACG,CAAC,QAAQsE,KAAI,SAACsF,GAAD,OACZ,eAAC,IAAMM,SAAP,WACE,cAACC,GAAA,EAAD,CACEtM,MAAO,CAAEkB,MAAO,SAChBnB,QAAS+L,EAAaC,GAAQ,GAC9B3M,UAAU,iBACVmN,MAAM,oBAJR,SAME,cAACC,GAAA,EAAD,CAAYxM,MAAO,CAACiC,gBAAgB,UAAWf,MAAM,SAArD,SACE,cAAC,KAAD,CACElB,MAAO,CAAEkB,MAAO,SAChB9B,UAAU,uBAIhB,cAACqN,GAAA,EAAD,CACEV,OAAQA,EACRC,KAAM5N,EAAM2N,GACZW,QAASZ,EAAaC,GAAQ,GAHhC,SAKGG,EAAKH,OAnBWA,MAuBvB,qBAAK/L,MAAO,CAACiB,QAAS,QAAtB,SACE,cAAC,EAAD,SCrDR,IAAMtB,GAAU,IAAIC,IAGd+M,GAAYhN,GAAQiN,IAAI,SAExB9L,GAAS+L,IAAWC,YAHX,gBAMZH,IACC7L,GAAOiM,YAAY,CACf3I,GAAIzE,GAAQiN,IAAI,UAChBhP,KAAM+B,GAAQiN,IAAI,YAClB9G,SAAUnG,GAAQiN,IAAI,YACtB/G,MAAOlG,GAAQiN,IAAI,aACnBjD,eAAgBhK,GAAQiN,IAAI,kBAC5B9D,YAAanJ,GAAQiN,IAAI,gBAC1BD,IAIP,IAceK,GAdH,WACR,OAAIL,GAGA,qBAAKvN,UAAU,eAAf,SACI,eAAC6N,EAAA,EAAD,CAAMnM,OAAQA,GAAQoM,MAAM,aAA5B,UACI,cAACtB,GAAD,IAEA,cAAC,EAAD,SAPU,cAAC,GAAD,KCzB1BuB,IAASC,OACP,cAAC,IAAD,CAAUxO,MAAOG,EAAjB,SACE,cAAC,GAAD,MAEFsO,SAASC,eAAe,W","file":"static/js/main.56d1a0c6.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialChatState = {\r\n  createType: \"\",\r\n  isCreating: false,\r\n  isEditing: false,\r\n  toggleContainer: false,\r\n};\r\n\r\nconst chatSlice = createSlice({\r\n  name: \"chat\",\r\n  initialState: initialChatState,\r\n  reducers: {\r\n    setCreateType(state, action) {\r\n      state.createType = action.payload;\r\n    },\r\n    setIsCreating(state, action) {\r\n      state.isCreating = action.payload;\r\n    },\r\n    setIsEditing(state, action) {\r\n      state.isEditing = action.payload;\r\n    },\r\n    setToggleContainer(state, action) {\r\n      state.toggleContainer = !action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Slice.action - נותן גישה למתודות של הסלייס שלו\r\nexport const chatActions = chatSlice.actions;\r\nexport default chatSlice.reducer;\r\n","import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n// createSlice - פונקציה שמקבלת סטייט התחלתי ויוצרת פונקציות על אותו סטייט הניתנות לשימוש\r\n// configureStore - מפשט את תהליך אספקת המידע, בכך שהוא מחזיק את כל ספקי המידע תחתיו\r\nimport chatReducer from \"./chat\";\r\n\r\nconst store = configureStore({\r\n  reducer: { chat: chatReducer },\r\n});\r\n\r\n// Slice.action - נותן גישה למתודות של הסלייס שלו\r\n// export const counterActions = counterSlice.actions;\r\nexport default store;\r\n","import React from \"react\";\r\nimport { Channel, MessageTeam } from \"stream-chat-react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { ChannelInner, CreateChannel, EditChannel } from \"./\";\r\n\r\nconst ChannelContainer = () => {\r\n  const isCreate = useSelector((state) => state.chat.isCreating);\r\n  const isEditing = useSelector((state) => state.chat.isEditing);\r\n  \r\n  if (isCreate) {\r\n    return (\r\n      <div className=\"channel__container\">\r\n        <CreateChannel/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isEditing) {\r\n    return (\r\n      <div className=\"channel__container\">\r\n        <EditChannel />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Return when the user in new channel without any messages yet\r\n  const EmptyState = () => (\r\n    <div className=\"channel-empty__container\">\r\n      <p className=\"channel-empty__first\">\r\n        This is the beginning of your chat history.\r\n      </p>\r\n      <p className=\"channel-empty__second\">\r\n        Send messages, attachments, links, emojis, and more!\r\n      </p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\" channel__container\">\r\n      <Channel\r\n        EmptyStateIndicator={EmptyState}\r\n        Message={(messageProps, i) => <MessageTeam key={i} {...messageProps} />}\r\n      >\r\n        <ChannelInner />\r\n      </Channel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChannelContainer;\r\n","import React from 'react';\r\nimport { ChannelList, useChatContext } from 'stream-chat-react';\r\nimport Cookies from 'universal-cookie';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { chatActions } from '../store/chat';\r\nimport { MdLogout } from \"react-icons/md\";\r\n\r\nimport { ChannelSearch, TeamChannelList, TeamChannelPreview } from './';\r\nimport LogoutIcon from '../assets/logout.png'\r\n\r\nconst cookies = new Cookies();\r\n\r\n// START- Few components realated only to ChannelListContainer\r\nconst SideBar = ({ logout }) => (\r\n        <div className=\"channel-list__sidebar__icon2\">\r\n            <div className=\"icon1__inner\" onClick={logout}>\r\n            <MdLogout style={{fontSize:\"2.2rem\"}}/>\r\n            </div>\r\n        </div>\r\n);\r\n\r\nconst CompanyHeader = () => (\r\n  // <div className=\"channel-list__header\">\r\n    <h1 className=\"channel-list__header__text\">Super Chat</h1>\r\n  // </div>\r\n);\r\n\r\n// Filter the data to get only the team channels\r\nconst customChannelTeamFilter = (channels) => {\r\n    return channels.filter((channel) => channel.type === 'team');\r\n}\r\n\r\n// Filter the data to get only the messaging channels\r\nconst customChannelMessagingFilter = (channels) => {\r\n    return channels.filter((channel) => channel.type === 'messaging');\r\n}\r\n// END- Few components realated only to ChannelListContainer\r\n\r\n\r\nexport const ChannelListContent = () => {\r\n    const { client } = useChatContext();\r\n\r\n    // Logout and clear the cookies and reload the page\r\n    const logout = () => {\r\n        cookies.remove(\"token\");\r\n        cookies.remove('userId');\r\n        cookies.remove('username');\r\n        cookies.remove('fullName');\r\n        cookies.remove('avatarURL');\r\n        cookies.remove('hashedPassword');\r\n        cookies.remove('phoneNumber');\r\n\r\n        window.location.reload();\r\n    }\r\n\r\n    const filters = { members: { $in: [client.userID] } };\r\n\r\n    return (\r\n      <>\r\n        <div className=\"channel-list__list__wrapper\">\r\n          <div  style={{width:'100%', display:'flex'}}>\r\n          <SideBar style={{display:'flex', color:'white'}} logout={logout} />\r\n          <CompanyHeader />\r\n          </div>\r\n          <ChannelSearch />\r\n          {/* Get the team channel list */}\r\n          <ChannelList\r\n            filters={filters}\r\n            channelRenderFilterFn={customChannelTeamFilter}\r\n            List={(listProps) => (\r\n              // Pass the list to TeamChannelList component\r\n              <TeamChannelList\r\n                {...listProps}\r\n                type=\"team\"\r\n              />\r\n            )}\r\n            Preview={(previewProps) => (\r\n              <TeamChannelPreview\r\n                {...previewProps}\r\n                type=\"team\"\r\n              />\r\n            )}\r\n          />\r\n          <ChannelList\r\n            filters={filters}\r\n            channelRenderFilterFn={customChannelMessagingFilter}\r\n            List={(listProps) => (\r\n              <TeamChannelList\r\n                {...listProps}\r\n                type=\"messaging\"\r\n              />\r\n            )}\r\n            Preview={(previewProps) => (\r\n              <TeamChannelPreview\r\n                {...previewProps}\r\n                type=\"messaging\"\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\n\r\nconst ChannelListContainer = () => {\r\n    const toggleContainer = useSelector((state) => state.chat.toggleContainer);\r\n    const dispatch = useDispatch();\r\n  \r\n    return (\r\n      <>\r\n        <div className=\"channel-list__container\">\r\n          <ChannelListContent/>\r\n        </div>\r\n\r\n        <div\r\n          className=\"channel-list__container-responsive\"\r\n          style={{\r\n            left: toggleContainer ? \"0%\" : \"-89%\",\r\n            backgroundColor: \"#005fff\",\r\n          }}\r\n        >\r\n          <div\r\n            className=\"channel-list__container-toggle\"\r\n            onClick={() =>\r\n              dispatch(chatActions.setToggleContainer(toggleContainer))\r\n            }\r\n          ></div>\r\n          <ChannelListContent/>\r\n        </div>\r\n      </>\r\n    );\r\n\r\n}\r\n\r\nexport default ChannelListContainer;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { chatActions } from '../store/chat';\r\n\r\n\r\nexport const AddChannel = ({ type }) => {\r\n const dispatch = useDispatch();\r\n const isCreating = useSelector((state) => state.chat.isCreating);\r\n const toggleContainer = useSelector((state) => state.chat.toggleContainer);\r\n\r\n  return (\r\n  <svg\r\n    width='14'\r\n    height='14'\r\n    viewBox='0 0 14 14'\r\n    fill='none'\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    onClick={() => {  \r\n      dispatch(chatActions.setCreateType(type));\r\n      dispatch(chatActions.setIsCreating(!isCreating));\r\n      dispatch(chatActions.setIsEditing(false));\r\n      if (toggleContainer)\r\n        dispatch(chatActions.setToggleContainer(toggleContainer)); \r\n    }}\r\n  >\r\n    <path\r\n      d='M7 0C3.13438 0 0 3.13438 0 7C0 10.8656 3.13438 14 7 14C10.8656 14 14 10.8656 14 7C14 3.13438 10.8656 0 7 0ZM11 7.5H7.5V11H6.5V7.5H3V6.5H6.5V3H7.5V6.5H11V7.5Z'\r\n      fill='white'\r\n      fillOpacity='0.66'\r\n    />\r\n  </svg>\r\n)};\r\n","import React from 'react';\r\n\r\nexport const ChannelInfo = () => (\r\n  <svg width='18' height='18' viewBox='0 0 18 18' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n    <path\r\n      d='M8.16602 6.49837H9.83269V4.83171H8.16602V6.49837ZM8.99936 15.665C5.32351 15.665 2.33268 12.6743 2.33268 8.99833C2.33268 5.32253 5.32351 2.33171 8.99936 2.33171C12.6752 2.33171 15.666 5.32253 15.666 8.99833C15.666 12.6743 12.6752 15.665 8.99936 15.665ZM8.99936 0.665039C4.39684 0.665039 0.666016 4.39587 0.666016 8.99833C0.666016 13.6009 4.39684 17.3317 8.99936 17.3317C13.6019 17.3317 17.3327 13.6009 17.3327 8.99833C17.3327 4.39587 13.6019 0.665039 8.99936 0.665039ZM8.16602 13.165H9.83269V8.165H8.16602V13.165Z'\r\n      fill='black'\r\n      fillOpacity='0.33'\r\n    />\r\n  </svg>\r\n);\r\n","import React from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { chatActions } from \"../store/chat\";\r\n\r\nexport const CloseCreateChannel = ({ setIsCreating }) => {\r\n const dispatch = useDispatch();\r\n  \r\n  return (\r\n  <svg\r\n    width='32'\r\n    height='32'\r\n    viewBox='0 0 32 32'\r\n    fill='none'\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    onClick={() => {\r\n      if (setIsCreating) dispatch(chatActions.setIsCreating(false));\r\n      if (chatActions.setIsEditing()) dispatch(chatActions.setIsEditing(false));\r\n    }}\r\n  >\r\n    <path\r\n      d='M6.10042 6.10051C0.633603 11.5673 0.633603 20.4327 6.10042 25.8995C11.5672 31.3663 20.4326 31.3663 25.8994 25.8995C31.3662 20.4327 31.3662 11.5673 25.8994 6.10051C20.4326 0.633686 11.5672 0.633685 6.10042 6.10051ZM22.3639 11.0503L17.4141 16L22.3639 20.9497L20.9497 22.364L15.9999 17.4142L11.0502 22.364L9.63596 20.9497L14.5857 16L9.63596 11.0503L11.0502 9.63604L15.9999 14.5858L20.9497 9.63604L22.3639 11.0503Z'\r\n      fill='var(--primary-color)'\r\n    />\r\n  </svg>\r\n)};\r\n","import React from 'react';\r\n\r\nexport const InviteIcon = () => (\r\n  <div style={{ marginLeft: '2px' }}>\r\n    <svg width='28' height='28' viewBox='0 0 28 28' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n      <path\r\n        d='M14 0C6.26875 0 0 6.26875 0 14C0 21.7313 6.26875 28 14 28C21.7313 28 28 21.7313 28 14C28 6.26875 21.7313 0 14 0ZM21.1812 9.31875L12.4875 20.475C12.4187 20.5438 12.3062 20.6938 12.1687 20.6938C12.025 20.6938 11.9313 20.5938 11.85 20.5125C11.7688 20.4313 6.91875 15.7687 6.91875 15.7687L6.825 15.675C6.7875 15.6187 6.75625 15.55 6.75625 15.475C6.75625 15.4 6.7875 15.3312 6.825 15.275C6.85 15.25 6.86875 15.2313 6.89375 15.2C7.375 14.6938 8.35 13.6687 8.4125 13.6062C8.49375 13.525 8.5625 13.4187 8.7125 13.4187C8.86875 13.4187 8.96875 13.55 9.04375 13.625C9.11875 13.7 11.8562 16.3312 11.8562 16.3312L18.8125 7.39375C18.875 7.34375 18.95 7.30625 19.0312 7.30625C19.1125 7.30625 19.1875 7.3375 19.25 7.3875L21.1625 8.89375C21.2125 8.95625 21.2437 9.03125 21.2437 9.1125C21.25 9.19375 21.2188 9.2625 21.1812 9.31875Z'\r\n        fill='#1D9D67'\r\n      />\r\n    </svg>\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\nexport const SearchIcon = () => (\r\n  <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'>\r\n    <path\r\n      fill='#fff'\r\n      fillOpacity='0.66'\r\n      fillRule='evenodd'\r\n      d='M2.7 6.95a4.25 4.25 0 117.306 2.954 1.001 1.001 0 00-.102.102A4.25 4.25 0 012.7 6.95zm7.906 5.07a6.25 6.25 0 111.414-1.414l2.987 2.987a1 1 0 11-1.414 1.414l-2.987-2.987z'\r\n      clipRule='evenodd'\r\n    ></path>\r\n  </svg>\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useChatContext } from 'stream-chat-react';\r\n\r\nimport { ResultsDropdown } from './'\r\nimport { SearchIcon } from '../assets';\r\n\r\nconst ChannelSearch = () => {\r\n    const { client, setActiveChannel } = useChatContext();\r\n    const [query, setQuery] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [teamChannels, setTeamChannels] = useState([])\r\n    const [directChannels, setDirectChannels] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(!query) {\r\n            setTeamChannels([]);\r\n            setDirectChannels([]);\r\n        }\r\n    }, [query])\r\n\r\n    // onChange search input onSearch method call to getChannels that fetch the channels\r\n    const getChannels = async (text) => {\r\n        try {\r\n            const channelResponse = client.queryChannels({\r\n                type: 'team', \r\n                name: { $autocomplete: text }, \r\n                members: { $in: [client.userID]}\r\n            });\r\n            const userResponse = client.queryUsers({\r\n                id: { $ne: client.userID },\r\n                name: { $autocomplete: text }\r\n            })\r\n\r\n            const [channels, { users }] = await Promise.all([channelResponse, userResponse]);\r\n\r\n            if(channels.length) setTeamChannels(channels);\r\n            if(users.length) setDirectChannels(users);\r\n        } catch (error) {\r\n            setQuery('')\r\n        }\r\n    }\r\n\r\n    // onChange search input\r\n    const onSearch = (event) => {\r\n        event.preventDefault();\r\n\r\n        setLoading(true);\r\n        setQuery(event.target.value);\r\n        getChannels(event.target.value)\r\n    }\r\n\r\n    const setChannel = (channel) => {\r\n        setQuery('');\r\n        setActiveChannel(channel);\r\n    }\r\n\r\n    return (\r\n        <div className=\"channel-search__container\">\r\n            <div className=\"channel-search__input__wrapper\">\r\n                <div className=\"channel-serach__input__icon\">\r\n                    <SearchIcon />\r\n                </div>\r\n                <input \r\n                    className=\"channel-search__input__text\" \r\n                    placeholder=\"Search\" \r\n                    type=\"text\" \r\n                    value={query}  \r\n                    onChange={onSearch}\r\n                />\r\n            </div>\r\n            { query && (\r\n                <ResultsDropdown \r\n                    teamChannels={teamChannels}\r\n                    directChannels={directChannels}\r\n                    loading={loading}\r\n                    setChannel={setChannel}\r\n                    setQuery={setQuery}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChannelSearch\r\n","import React from 'react';\r\n\r\nimport { AddChannel } from '../assets';\r\n\r\nconst TeamChannelList = ({ children, error = false, loading, type,  \r\n    }) => {\r\n    // Error messages\r\n    if(error) {\r\n      // decleared type = team  in ChannelList (in ChannelListContainer comp)\r\n      return type === \"team\" ? (\r\n        <div className=\"team-channel-list\">\r\n          <p className=\"team-channel-list__message\">\r\n            Connection error, please wait a moment and try again.\r\n          </p>\r\n        </div>\r\n      ) : null;\r\n    }\r\n\r\n    // Loading messages\r\n    if(loading) {\r\n        return (\r\n            <div className=\"team-channel-list\">\r\n                <p className=\"team-channel-list__message loading\">\r\n                    {type === 'team' ? 'Channels' : 'Messages'} loading...\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"team-channel-list\">\r\n            <div className=\"team-channel-list__header\">\r\n                <p className=\"team-channel-list__header__title\">\r\n                    {type === 'team' ? 'Channels' : 'Direct Messages'}\r\n                </p>\r\n                {/* Add channel button (svg) */}\r\n                <AddChannel \r\n                    type={type === 'team' ? 'team' : 'messaging'}\r\n                />\r\n            </div>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamChannelList\r\n","import React from 'react';\r\nimport { Avatar, useChatContext } from 'stream-chat-react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { chatActions } from \"../store/chat\";\r\n\r\nconst TeamChannelPreview = ({ setActiveChannel,\r\n    channel, type }) => {\r\n    const { channel: activeChannel, client } = useChatContext();\r\n    const dispatch = useDispatch();\r\n    const toggleContainer = useSelector((state) => state.chat.toggleContainer);\r\n\r\n    // Specify the channel name || id\r\n    const ChannelPreview = () => (\r\n        <p className=\"channel-preview__item\">\r\n            # {channel?.data?.name || channel?.data?.id}\r\n        </p>\r\n    );\r\n\r\n\r\n    // Return the member preview\r\n    const DirectPreview = () => {\r\n        // Get all the members from channel object and filter where it's not the current clinet \r\n        const members = Object.values(channel.state.members).filter(({ user }) => user.id !== client.userID);\r\n    \r\n        return (\r\n            <div className=\"channel-preview__item single\">\r\n                <Avatar \r\n                    image={members[0]?.user?.image}\r\n                    name={members[0]?.user?.fullName || members[0]?.user?.id}\r\n                    size={24}\r\n                />\r\n                <p>{members[0]?.user?.fullName || members[0]?.user?.id}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={\r\n            channel?.id === activeChannel?.id\r\n                ? 'channel-preview__wrapper__selected'\r\n                : 'channel-preview__wrapper'\r\n        }\r\n        onClick={() => {\r\n            dispatch(chatActions.setIsCreating(false));\r\n            dispatch(chatActions.setIsEditing(false));\r\n            setActiveChannel(channel);\r\n            if (toggleContainer) {\r\n              dispatch(chatActions.setToggleContainer(toggleContainer));\r\n            }\r\n        }}\r\n        >\r\n            {type === 'team' ? <ChannelPreview /> : <DirectPreview />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TeamChannelPreview\r\n","import React, { useState } from 'react';\r\nimport { MessageList, MessageInput, Thread, Window, useChannelActionContext, Avatar, useChannelStateContext, useChatContext } from 'stream-chat-react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { chatActions } from \"../store/chat\";\r\n\r\nimport { ChannelInfo } from '../assets';\r\n\r\nexport const GiphyContext = React.createContext({});\r\n\r\nconst ChannelInner = ({ \r\n }) => {\r\n  const [giphyState, setGiphyState] = useState(false);\r\n  const { sendMessage } = useChannelActionContext();\r\n  \r\n  const overrideSubmitHandler = (message) => {\r\n    let updatedMessage = {\r\n      attachments: message.attachments,\r\n      mentioned_users: message.mentioned_users,\r\n      parent_id: message.parent?.id,\r\n      parent: message.parent,\r\n      text: message.text,\r\n    };\r\n    \r\n    if (giphyState) {\r\n      updatedMessage = { ...updatedMessage, text: `/giphy ${message.text}` };\r\n    }\r\n    \r\n    if (sendMessage) {\r\n      sendMessage(updatedMessage);\r\n      setGiphyState(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GiphyContext.Provider value={{ giphyState, setGiphyState }}>\r\n      <div style={{ display: 'flex', width: '100%' }}>\r\n        <Window>\r\n          <TeamChannelHeader\r\n            />\r\n          <MessageList />\r\n          <MessageInput overrideSubmitHandler={overrideSubmitHandler} />\r\n        </Window>\r\n        <Thread />\r\n      </div>\r\n    </GiphyContext.Provider>\r\n  );\r\n};\r\n\r\nconst TeamChannelHeader = ({ \r\n }) => {\r\n    const { channel, watcher_count } = useChannelStateContext();\r\n    const { client } = useChatContext();\r\n  \r\n    const MessagingHeader = () => {\r\n      const members = Object.values(channel.state.members).filter(({ user }) => user.id !== client.userID);\r\n      const additionalMembers = members.length - 3;\r\n      const dispatch = useDispatch();\r\n      \r\n\r\n      if(channel.type === 'messaging') {\r\n        return (\r\n          <div className='team-channel-header__name-wrapper'>\r\n            {members.map(({ user }, i) => (\r\n              <div key={i} className='team-channel-header__name-multi'>\r\n                <Avatar image={user.image} name={user.fullName || user.id} size={32} />\r\n                <p className='team-channel-header__name user'>{user.fullName || user.id}</p>\r\n              </div>\r\n            ))}\r\n  \r\n            {additionalMembers > 0 && <p className='team-channel-header__name user'>and {additionalMembers} more</p>}\r\n          </div>\r\n        );\r\n      }\r\n  \r\n      return (\r\n        <div className=\"team-channel-header__channel-wrapper\">\r\n          <p className=\"team-channel-header__name\"># {channel.data.name}</p>\r\n          <span\r\n            style={{ display: \"flex\" }}\r\n            onClick={() => dispatch(chatActions.setIsEditing(true))}\r\n          >\r\n            <ChannelInfo />\r\n          </span>\r\n        </div>\r\n      );\r\n    };\r\n  \r\n    const getWatcherText = (watchers) => {\r\n      if (!watchers) return 'No users online';\r\n      if (watchers === 1) return '1 user online';\r\n      return `${watchers} users online`;\r\n    };\r\n  \r\n    return (\r\n      <div className='team-channel-header__container'>\r\n        <MessagingHeader />\r\n        <div className='team-channel-header__right'>\r\n          <p className='team-channel-header__right-text'>{getWatcherText(watcher_count)}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default ChannelInner;\r\n","import React, { useState } from 'react';\r\nimport { useChatContext } from 'stream-chat-react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { chatActions } from \"../store/chat\";\r\n\r\nimport { UserList } from './';\r\nimport { CloseCreateChannel } from '../assets';\r\n\r\n// Update the channel name\r\nconst ChannelNameInput = ({ channelName = '', setChannelName }) => {\r\n    const handleChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        setChannelName(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"channel-name-input__wrapper\">\r\n            <p>Name</p>\r\n            <input value={channelName} onChange={handleChange} placeholder=\"channel-name\" />\r\n            <p>Add Members</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Create new channel\r\nconst CreateChannel = () => {\r\n    const createType = useSelector((state) => state.chat.createType);\r\n    const { client, setActiveChannel } = useChatContext();\r\n    const [selectedUsers, setSelectedUsers] = useState([client.userID || ''])\r\n    const [channelName, setChannelName] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const createChannel = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            // Create the channel\r\n            const newChannel = await client.channel(createType, channelName, {\r\n                name: channelName, members: selectedUsers\r\n            });\r\n\r\n            // Keep following to this channel for any changes (messages)\r\n            await newChannel.watch();\r\n\r\n            setChannelName('');\r\n            dispatch(chatActions.setIsCreating(false));\r\n            setSelectedUsers([client.userID]);\r\n            setActiveChannel(newChannel);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-channel__container\">\r\n            <div className=\"create-channel__header\">\r\n                <p>{createType === 'team' ? 'Create a New Channel' : 'Send a Direct Message'}</p>\r\n                <CloseCreateChannel />\r\n            </div>\r\n            {createType === 'team' && <ChannelNameInput channelName={channelName} setChannelName={setChannelName}/>}\r\n            <UserList setSelectedUsers={setSelectedUsers} />\r\n            <div className=\"create-channel__button-wrapper\" onClick={createChannel}>\r\n                <p>{createType === 'team' ? 'Create Channel' : 'Create Message Group'}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateChannel\r\n","import React, { useState } from 'react';\r\nimport { useChatContext } from 'stream-chat-react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { chatActions } from \"../store/chat\";\r\n\r\nimport { UserList } from './';\r\nimport { CloseCreateChannel } from '../assets';\r\n\r\nconst ChannelNameInput = ({ channelName = '', setChannelName }) => {\r\n    const handleChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        setChannelName(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"channel-name-input__wrapper\">\r\n            <p>Name</p>\r\n            <input value={channelName} onChange={handleChange} placeholder=\"channel-name\" />\r\n            <p>Add Members</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst EditChannel = ({ \r\n }) => {\r\n    const { channel } = useChatContext();\r\n    const [channelName, setChannelName] = useState(channel?.data?.name);\r\n    const [selectedUsers, setSelectedUsers] = useState([])\r\n    const dispatch = useDispatch();\r\n\r\n    const updateChannel = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const nameChanged = channelName !== (channel.data.name || channel.data.id);\r\n\r\n        if(nameChanged) {\r\n            await channel.update({ name: channelName }, { text: `Channel name changed to ${channelName}`});\r\n        }\r\n\r\n        if(selectedUsers.length) {\r\n            await channel.addMembers(selectedUsers);\r\n        }\r\n\r\n        setChannelName(null);\r\n        dispatch(chatActions.setIsEditing(false));\r\n        setSelectedUsers([]);\r\n    }\r\n\r\n    return (\r\n        <div className=\"edit-channel__container\">\r\n            <div className=\"edit-channel__header\">\r\n                <p>Edit Channel</p>\r\n                <CloseCreateChannel \r\n                 />\r\n            </div>\r\n            <ChannelNameInput channelName={channelName} setChannelName={setChannelName} />\r\n            <UserList setSelectedUsers={setSelectedUsers} />\r\n            <div className=\"edit-channel__button-wrapper\" onClick={updateChannel}>\r\n                <p>Save Changes</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditChannel\r\n","export default __webpack_public_path__ + \"static/media/signup.61f8ea09.jpg\";","import React, { useState } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport axios from 'axios';\r\n\r\nimport signinImage from '../assets/signup.jpg';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst initialState = {\r\n    fullName: '',\r\n    username: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    phoneNumber: '',\r\n    avatarURL: '',\r\n}\r\n\r\nconst Auth = () => {\r\n    const [form, setForm] = useState(initialState);\r\n    const [isSignup, setIsSignup] = useState(false); //was true\r\n\r\n    const handleChange = (e) => {\r\n        setForm({ ...form, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    // Signup and set cookies and reload the page\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n\r\n      // Define all the inputs from form object state\r\n      const { username, password, phoneNumber, avatarURL } = form;\r\n\r\n      // const URL = 'http://localhost:5000/auth';\r\n      const URL = \"https://superchatting.herokuapp.com/auth\";\r\n\r\n      // Get all the data after send the data (the inputs) to the backend\r\n      const {\r\n        data: { token, userId, hashedPassword, fullName },\r\n      } = await axios.post(`${URL}/${isSignup ? \"signup\" : \"login\"}`, {\r\n        username,\r\n        password,\r\n        fullName: form.fullName,\r\n        phoneNumber,\r\n        avatarURL,\r\n      });\r\n\r\n      // Store the data in cookies\r\n      cookies.set(\"token\", token);\r\n      cookies.set(\"username\", username);\r\n      cookies.set(\"fullName\", fullName);\r\n      cookies.set(\"userId\", userId);\r\n\r\n      if (isSignup) {\r\n        cookies.set(\"phoneNumber\", phoneNumber);\r\n        cookies.set(\"avatarURL\", avatarURL);\r\n        cookies.set(\"hashedPassword\", hashedPassword);\r\n      }\r\n\r\n      // Reload the browser\r\n      window.location.reload();\r\n    }\r\n\r\n    const switchMode = () => {\r\n        setIsSignup((prevIsSignup) => !prevIsSignup);\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth__form-container\">\r\n            <div className=\"auth__form-container_fields\">\r\n                    <h1 className=\"auth_header\">Super Chat</h1>\r\n                <div className=\"auth__form-container_fields-content\">\r\n                    <p>{isSignup ? 'Sign Up' : 'Sign In'}</p>\r\n                    <form onSubmit={handleSubmit}>\r\n                        {isSignup && (\r\n                            <div className=\"auth__form-container_fields-content_input\">\r\n                                <label htmlFor=\"fullName\">Full Name</label>\r\n                                <input \r\n                                    name=\"fullName\" \r\n                                    type=\"text\"\r\n                                    placeholder=\"Full Name\"\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        )}\r\n                        <div className=\"auth__form-container_fields-content_input\">\r\n                            <label htmlFor=\"username\">Username</label>\r\n                                <input \r\n                                    name=\"username\" \r\n                                    type=\"text\"\r\n                                    placeholder=\"Username\"\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        {isSignup && (\r\n                            <div className=\"auth__form-container_fields-content_input\">\r\n                                <label htmlFor=\"phoneNumber\">Phone Number</label>\r\n                                <input \r\n                                    name=\"phoneNumber\" \r\n                                    type=\"text\"\r\n                                    placeholder=\"Phone Number\"\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        )}\r\n                        {isSignup && (\r\n                            <div className=\"auth__form-container_fields-content_input\">\r\n                                <label htmlFor=\"avatarURL\">Avatar URL</label>\r\n                                <input \r\n                                    name=\"avatarURL\" \r\n                                    type=\"text\"\r\n                                    placeholder=\"Avatar URL\"\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                        <div className=\"auth__form-container_fields-content_input\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input \r\n                                    name=\"password\" \r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        {isSignup && (\r\n                            <div className=\"auth__form-container_fields-content_input\">\r\n                                <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                                <input \r\n                                    name=\"confirmPassword\" \r\n                                    type=\"password\"\r\n                                    placeholder=\"Confirm Password\"\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            )}\r\n                        <div className=\"auth__form-container_fields-content_button\">\r\n                            <button>{isSignup ? \"Sign Up\" : \"Sign In\"}</button>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"auth__form-container_fields-account\">\r\n                        <p>\r\n                            {isSignup\r\n                             ? \"Already have an account?\" \r\n                             : \"Don't have an account?\"\r\n                             }\r\n                             <span onClick={switchMode}>\r\n                             {isSignup ? 'Sign In' : 'Sign Up'}\r\n                             </span>\r\n                        </p>\r\n                    </div>\r\n                </div> \r\n            </div>\r\n            <div className=\"auth__form-container_image\">\r\n                <img src={signinImage} alt=\"sign in\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Avatar, useChatContext } from 'stream-chat-react';\r\n\r\nimport { InviteIcon } from '../assets';\r\n\r\n// \r\nconst ListContainer = ({ children }) => {\r\n    return (\r\n        <div className=\"user-list__container\">\r\n            <div className=\"user-list__header\">\r\n                <p>User</p>\r\n                <p>Invite</p>\r\n            </div>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst UserItem = ({ user, setSelectedUsers }) => {\r\n    const [selected, setSelected] = useState(false)\r\n\r\n    // Select users to add\r\n    const handleSelect = () => {\r\n        console.log('click');\r\n        if(selected) {\r\n            setSelectedUsers((prevUsers) => prevUsers.filter((prevUser) => prevUser !== user.id))\r\n        } else {\r\n            setSelectedUsers((prevUsers) => [...prevUsers, user.id])\r\n        }\r\n\r\n        setSelected((prevSelected) => !prevSelected)\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-item__wrapper\" onClick={handleSelect}>\r\n            <div className=\"user-item__name-wrapper\">\r\n                <Avatar image={user.image} name={user.fullName || user.id} size={32} />\r\n                <p className=\"user-item__name\">{user.fullName || user.id}</p>\r\n            </div>\r\n            {selected ? <InviteIcon /> : <div className=\"user-item__invite-empty\" />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst UserList = ({ setSelectedUsers }) => {\r\n    const { client } = useChatContext();\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [listEmpty, setListEmpty] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const getUsers = async () => {\r\n            if(loading) return;\r\n\r\n            setLoading(true);\r\n            \r\n            try {\r\n                // 2:20:00 in the video\r\n                const response = await client.queryUsers(\r\n                    { id: { $ne: client.userID } },\r\n                    { id: 1 },\r\n                    { limit: 8 } \r\n                );\r\n\r\n                if(response.users.length) {\r\n                    setUsers(response.users);\r\n                } else {\r\n                    setListEmpty(true);\r\n                }\r\n            } catch (error) {\r\n               setError(true);\r\n            }\r\n            setLoading(false);\r\n        }\r\n\r\n        if(client) getUsers()\r\n    }, []);\r\n\r\n    if(error) {\r\n        return (\r\n            <ListContainer>\r\n                <div className=\"user-list__message\">\r\n                    Error loading, please refresh and try again.\r\n                </div>\r\n            </ListContainer>\r\n        )\r\n    }\r\n\r\n    if(listEmpty) {\r\n        return (\r\n            <ListContainer>\r\n                <div className=\"user-list__message\">\r\n                    No users found.\r\n                </div>\r\n            </ListContainer>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ListContainer>\r\n            {loading ? <div className=\"user-list__message\">\r\n                Loading users...\r\n            </div> : (\r\n                users?.map((user, i) => (\r\n                  <UserItem index={i} key={user.id} user={user} setSelectedUsers={setSelectedUsers} />  \r\n                ))\r\n            )}\r\n        </ListContainer>\r\n    )\r\n}\r\n\r\nexport default UserList;","import React from 'react';\r\nimport { Avatar, useChatContext } from 'stream-chat-react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { chatActions } from \"../store/chat\";\r\n\r\nconst channelByUser = async ({ client, setActiveChannel, channel, setChannel }) => {\r\n  const filters = {\r\n    type: 'messaging',\r\n    member_count: 2,\r\n    members: { $eq: [client.user.id, client.userID] },\r\n  };\r\n\r\n  const [existingChannel] = await client.queryChannels(filters);\r\n\r\n  if (existingChannel) return setActiveChannel(existingChannel);\r\n\r\n  const newChannel = client.channel('messaging', { members: [channel.id, client.userID] });\r\n  \r\n  setChannel(newChannel)\r\n\r\n  return setActiveChannel(newChannel);\r\n};\r\n\r\nconst SearchResult = ({ channel, focusedId, type, setChannel }) => {\r\n  const { client, setActiveChannel } = useChatContext();\r\n  const dispatch = useDispatch();\r\n const toggleContainer = useSelector((state) => state.chat.toggleContainer);\r\n\r\n  if (type === 'channel') {\r\n    return (\r\n      <div\r\n        onClick={() => {\r\n          setChannel(channel)\r\n          if(toggleContainer) {\r\n            dispatch(chatActions.setToggleContainer(toggleContainer));\r\n          }\r\n        }}\r\n        className={focusedId === channel.id ? 'channel-search__result-container__focused' : 'channel-search__result-container' }\r\n      >\r\n        <div className='result-hashtag'>#</div>\r\n        <p className='channel-search__result-text'>{channel.data.name}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={async () => {\r\n        channelByUser({ client, setActiveChannel, channel, setChannel })\r\n        if(toggleContainer) {\r\n            dispatch(chatActions.setToggleContainer(toggleContainer)); \r\n        }\r\n      }}\r\n      className={focusedId === channel.id ? 'channel-search__result-container__focused' : 'channel-search__result-container' }\r\n    >\r\n      <div className='channel-search__result-user'>\r\n        <Avatar image={channel.image || undefined} name={channel.name} size={24} />\r\n        <p className='channel-search__result-text'>{channel.name}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ResultsDropdown = ({ teamChannels, directChannels, focusedId, loading, setChannel }) => {\r\n\r\n  return (\r\n    <div className='channel-search__results'>\r\n      <p className='channel-search__results-header'>Channels</p>\r\n      {loading && !teamChannels.length && (\r\n        <p className='channel-search__results-header'>\r\n          <i>Loading...</i>\r\n        </p>\r\n      )}\r\n      {!loading && !teamChannels.length ? (\r\n        <p className='channel-search__results-header'>\r\n          <i>No channels found</i>\r\n        </p>\r\n      ) : (\r\n        teamChannels?.map((channel, i) => (\r\n          <SearchResult\r\n            channel={channel}\r\n            focusedId={focusedId}\r\n            key={i}\r\n            setChannel={setChannel}\r\n            type='channel'\r\n          />\r\n        ))\r\n      )}\r\n      <p className='channel-search__results-header'>Users</p>\r\n      {loading && !directChannels.length && (\r\n        <p className='channel-search__results-header'>\r\n          <i>Loading...</i>\r\n        </p>\r\n      )}\r\n      {!loading && !directChannels.length ? (\r\n        <p className='channel-search__res ults-header'>\r\n          <i>No direct messages found</i>\r\n        </p>\r\n      ) : (\r\n        directChannels?.map((channel, i) => (\r\n          <SearchResult\r\n            channel={channel}\r\n            focusedId={focusedId}\r\n            key={i}\r\n            setChannel={setChannel}\r\n            type='user'\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultsDropdown;","import React, { useState } from 'react';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport './sideBar.css';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport { ChannelListContainer } from './';\r\nimport { ChannelListContent } from \"./ChannelListContainer\";\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\n\r\nexport default function Side() {\r\n  const [state, setState] = useState({\r\n    left: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n    sx={{ width: anchor === \"top\" || anchor === \"bottom\" ? \"auto\" : 250 }}\r\n    role=\"presentation\"\r\n    className=\"sidebar-design\"\r\n    style={{ width: \"14rem\", backgroundColor: \"#00b17c\" ,height:'1000rem' }}\r\n    >\r\n      <PerfectScrollbar>\r\n      <ChannelListContainer />\r\n </PerfectScrollbar>\r\n    </div>\r\n  );\r\n  return (\r\n    <div >\r\n      {[\"left\"].map((anchor) => (\r\n        <React.Fragment key={anchor} >\r\n          <Tooltip \r\n            style={{ color: \"white\" }}\r\n            onClick={toggleDrawer(anchor, true)}\r\n            className=\"tooltip-design\"\r\n            title=\"Open the side bar\"\r\n          >\r\n            <IconButton style={{backgroundColor:'#00b17c', color:\"white\"}}>\r\n              <AiIcons.AiOutlineAlignLeft\r\n                style={{ color: \"white\" }}\r\n                className=\"tooltip-design\"\r\n              />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Drawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n          >\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n      <div style={{display: 'none'}}>\r\n        <ChannelListContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { StreamChat } from 'stream-chat';\r\nimport { Chat } from 'stream-chat-react';\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport { ChannelListContainer, ChannelContainer, Auth } from './components';\r\n\r\nimport 'stream-chat-react/dist/css/index.css';\r\nimport './App.css';\r\nimport Side from './components/Side';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst apiKey = \"gw255tjbwqry\";\r\nconst authToken = cookies.get(\"token\");\r\n\r\nconst client = StreamChat.getInstance(apiKey);\r\n\r\n// If have authToken -> create/connect the user\r\nif(authToken) {\r\n    client.connectUser({\r\n        id: cookies.get('userId'),\r\n        name: cookies.get('username'),\r\n        fullName: cookies.get('fullName'),\r\n        image: cookies.get('avatarURL'),\r\n        hashedPassword: cookies.get('hashedPassword'),\r\n        phoneNumber: cookies.get('phoneNumber'),\r\n    }, authToken) //authToken for connected\r\n}\r\n\r\n\r\nconst App = () => {\r\n    if(!authToken) return <Auth />\r\n\r\n    return (\r\n        <div className=\"app__wrapper\">\r\n            <Chat client={client} theme=\"team light\">\r\n                <Side />\r\n                 {/* <ChannelListContainer /> */}\r\n                <ChannelContainer />\r\n            </Chat>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport chat from \"./store\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <Provider store={chat}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}